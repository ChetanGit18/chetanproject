{
	"name": "df_scd2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp",
						"type": "DatasetReference"
					},
					"name": "txtfile"
				},
				{
					"dataset": {
						"referenceName": "ds_emp_table",
						"type": "DatasetReference"
					},
					"name": "sqltabel"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_emp_table",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_emp_table",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "AddIsActiveFlag"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> txtfile",
				"source(output(",
				"          id as integer,",
				"          names as string,",
				"          eid as integer,",
				"          IsActive as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sqltabel",
				"txtfile derive(IsActive = 1) ~> AddIsActiveFlag",
				"sqltabel select(mapColumn(",
				"          sid = id,",
				"          snames = names,",
				"          eid,",
				"          sIsActive = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"txtfile, select1 lookup(id == sid,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 derive(sIsActive = 0) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
				"AddIsActiveFlag sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          names as string,",
				"          eid as integer,",
				"          IsActive as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          names = name,",
				"          IsActive",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          names as string,",
				"          eid as integer,",
				"          IsActive as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['eid'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          eid,",
				"          IsActive = sIsActive",
				"     )) ~> sink2"
			]
		}
	}
}